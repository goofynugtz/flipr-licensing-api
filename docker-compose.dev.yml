version: '3'

services:
  
  gotrue:
    container_name: gotrue
    build: 
      context: ./netlify-gotrue
      dockerfile: Dockerfile
    env_file: ./netlify-gotrue/.env
    depends_on:
      - mariadb
    # ports:
    #   - 9999:9999
    network_mode: "host"
  
  api:
    container_name: api
    build: 
      context: ./fliprLicensingApi
      dockerfile: Dockerfile
    # command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./static:/static
    # ports:
    #   - 8000:8000
    depends_on:
      - db
    env_file:
      - ./fliprLicensingApi/.env
    network_mode: "host"

  db:
    container_name: postgres-db
    image: postgres:13.0-alpine
    volumes:
      - data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=jaspercyan
      - POSTGRES_USER=postgres
      - POSTGRES_DB=notesdatabase
    # ports:
    #   - 5432:5432
    network_mode: "host"
    
  pgadmin:
    container_name: postgres-admin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=rahulranjan25.RR@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    # ports:
    #   - 5050:80
    network_mode: "host"
  
  mariadb:
    container_name: mysql-db
    image: mariadb
    environment:
        MYSQL_DATABASE: gotrue_development
        MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    restart: always
    volumes:
      - gotrue_mariadb_data:/var/lib/mysql
    # ports:
    #   - 3306:3306
    network_mode: "host"

  phpmyadmin:
    container_name: mysql-admin
    image: 'phpmyadmin/phpmyadmin'
    restart: always
    depends_on:
      - mariadb
    # ports:
    #   - '7000:80'
    environment: 
      DATABASE_HOST: mariadb
    network_mode: "host"


  # nginx:
  #   image: nginx
  #   restart: always
  #   volumes:
  #   - ./static:/static
  #   - ./nginx/conf.d:/etc/nginx/conf.d
  #   - ./nginx/certbot/conf:/etc/letsencrypt
  #   - ./nginx/certbot/logs:/var/log/letsencrypt
  #   - ./nginx/certbot/data:/usr/share/nginx/html/letsencrypt
  #   ports:
  #   - 80:80
  #   - 443:443
  #   depends_on:
  #     - prometheus
  #     - api

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    # ports:
    #   - 9090:9090
    depends_on:
      - api
    network_mode: "host"

  grafana:
    container_name: grafana
    image: grafana/grafana
    # environment:
      # GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana:/var/lib/grafana
    # ports:
    #   - 3000:3000
    depends_on:
      - prometheus
    network_mode: "host"

volumes:
  data:
  grafana:
  gotrue_mariadb_data:
